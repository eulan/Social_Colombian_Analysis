# -*- coding: utf-8 -*-
"""violencia.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZlWQLdk6oZ-voPlaM1p0jdP1T5RWLfOg
"""

from google.colab import drive
drive.mount('/content/gdrive')

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd 
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import Ridge
from sklearn.pipeline import make_pipeline
from sklearn.cluster import AgglomerativeClustering
import scipy.cluster.hierarchy as sch

path = '/content/gdrive/My Drive/Colab Notebooks/folium/Violencia_de_Pareja_2015.csv'
df = pd.read_csv(path, header=None)
df = df.dropna()

df2 = df
a=0
b=0
for i in range(2,17):
  a = 0
  b = 0
  
  a = float(df.iloc[1:17,0][i][6:8])
  b = float(df.iloc[1:17,0][i][1:3])
  df2.iloc[1:17,0][i] = (a+b)/2.0

df2.iloc[1:17,0][17] = float(df.iloc[1:17,0][17][1:3])

df2.reset_index()

fig = plt.figure(figsize=(20, 13))

plt.subplot(2, 2, 1)
X_ = df2.iloc[1:17,0:10].to_numpy(dtype = float)
labels = ["Hombres", "Mujeres"]
x = X_[:,0]
y_data = X_[:,4]
y_data_2 = X_[:,1]
x = x[:, np.newaxis]
model = make_pipeline(PolynomialFeatures(10), Ridge())
model2 = make_pipeline(PolynomialFeatures(10), Ridge())
model.fit(x, y_data)
model2.fit(x, y_data_2)

y_plot = model.predict(x)
y_plot_2 = model2.predict(x)
plt.stackplot(X_[:,0],X_[:,1], X_[:,4],labels =('Hombre', 'Mujeres'))
plt.plot(x, y_plot , dashes=[6, 2], color="Black", label='Poly 10 degree')
plt.plot(x, y_plot_2, dashes=[6, 2] , color="Black", label='Poly 10 degree')
plt.scatter(x,y_data, color = "Black" , label='Mujeres')
plt.scatter(x,y_data_2, color = "Black", label='Hombres')
plt.legend()
plt.xlabel("Frecuencias de Abuso")
plt.ylabel("Rangos de edad")

plt.subplot(2, 2, 2)
x = X_[:,0]
y_data = X_[:,6]
y_data_2 = X_[:,3]
x = x[:, np.newaxis]
model = make_pipeline(PolynomialFeatures(10), Ridge())
model2 = make_pipeline(PolynomialFeatures(10), Ridge())
model.fit(x, y_data)
model2.fit(x, y_data_2)

y_plot = model.predict(x)
y_plot_2 = model2.predict(x)
plt.stackplot(X_[:,0],X_[:,3], X_[:,6],labels =('Hombre', 'Mujeres'))
plt.plot(x, y_plot , dashes=[6, 2], color="Black", label='Poly 10 degree')
plt.plot(x, y_plot_2, dashes=[6, 2] , color="Black", label='Poly 10 degree')
plt.scatter(x,y_data, color = "Black" , label='Mujeres')
plt.scatter(x,y_data_2, color = "Black", label='Hombres')
plt.legend()
plt.xlabel("Tasa de Abuso")
plt.ylabel("Rangos de edad")

plt.subplot(2, 2, 3)

X_[:,0] = X_[:,0]/X_[:,0].max()
X_[:,1] = X_[:,1]/X_[:,1].max()
X_[:,3] = X_[:,3]/X_[:,3].max()
X_[:,9] = X_[:,9]/X_[:,9].max()
X_[:,6] = X_[:,6]/X_[:,6].max()
X_[:,4] = X_[:,4]/X_[:,4].max()
X = X_[:,[0,1,3,9]]
y = np.zeros(2*len(X), dtype = int)
a = len(X)
for i in range(0,a):
  y[i] = 1
X = np.append(X,X_[:,[0,4,6,9]], axis = 0)
for i in range(a,len(X)):
  y[i] = 2
np.random.shuffle(X)
#dendrogram = sch.dendrogram(sch.linkage(X, method='ward'))
model = AgglomerativeClustering(n_clusters=4, affinity='euclidean', linkage='ward')
model.fit(X)
labels_ = model.labels_
for i in range(0,len(labels_)):
  if labels_[i] == 0:
    plt.scatter(X[i][1], X[i][2], marker='o', color='red')
  if labels_[i] == 1:
    plt.scatter(X[i][1], X[i][2], marker='o', color='blue')
  if labels_[i] == 2:
    plt.scatter(X[i][1], X[i][2], marker='o', color='green')
  if labels_[i] == 3:
    plt.scatter(X[i][1], X[i][2], marker='o', color='yellow')
plt.ylabel('Rate_total')
plt.xlabel('Rate_men/women')
plt.legend()
plt.title("AgglomerativeClustering - linkage = Warm")

plt.subplot(2, 2, 4)
for i in range(0,len(X)):
  if labels_[i] == 0:
    plt.scatter(X[i][0], X[i][2], s=50, marker='o', color='red')
  if labels_[i] == 1:
    plt.scatter(X[i][0], X[i][2], s=50, marker='o', color='blue')
  if labels_[i] == 2:
    plt.scatter(X[i][0], X[i][2], s=50, marker='o', color='green')
  if labels_[i] == 3:
    plt.scatter(X[i][0], X[i][2], s=50, marker='o', color='yellow')
plt.yscale('log')
plt.ylabel('Rate_men/women')
plt.xlabel('Age')
plt.legend(('40 - 65','65 - 80', '25 - 40', '0 - 25'),loc='lower center')
fig.savefig('/content/gdrive/My Drive/Colab Notebooks/folium/violencia.png')
plt.show()